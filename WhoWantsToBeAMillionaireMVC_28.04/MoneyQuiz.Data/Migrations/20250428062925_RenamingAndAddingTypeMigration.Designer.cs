// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyQuiz.Data.Data;

#nullable disable

namespace MoneyQuiz.Data.Migrations
{
    [DbContext(typeof(MoneyQuizContext))]
    [Migration("20250428062925_RenamingAndAddingTypeMigration")]
    partial class RenamingAndAddingTypeMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer_Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Correct")
                        .HasColumnType("bit");

                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Question_Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Game_Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Final_Amount")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Game_Sessions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Lifeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Player_Game_Session_Id")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Used_On_Question_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Player_Game_Session_Id");

                    b.HasIndex("Used_On_Question_Id");

                    b.ToTable("Lifelines");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Player_Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Answer_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Correct")
                        .HasColumnType("bit");

                    b.Property<int>("Player_Session_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Answer_Id");

                    b.HasIndex("Player_Session_Id");

                    b.ToTable("Player_Answers");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Player_Game_Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Player_Id")
                        .HasColumnType("int");

                    b.Property<int>("Session_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Player_Id");

                    b.HasIndex("Session_Id");

                    b.ToTable("Player_Game_Sessions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Question_Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Answer", b =>
                {
                    b.HasOne("MoneyQuiz.Data.Data.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Lifeline", b =>
                {
                    b.HasOne("MoneyQuiz.Data.Data.Models.Player_Game_Session", "Player_Game_Session")
                        .WithMany("Lifelines")
                        .HasForeignKey("Player_Game_Session_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyQuiz.Data.Data.Models.Question", "Question")
                        .WithMany("Lifelines")
                        .HasForeignKey("Used_On_Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player_Game_Session");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Player_Answer", b =>
                {
                    b.HasOne("MoneyQuiz.Data.Data.Models.Answer", "Answer")
                        .WithMany("Player_Answers")
                        .HasForeignKey("Answer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyQuiz.Data.Data.Models.Player_Game_Session", "Player_Game_Session")
                        .WithMany("Player_Answers")
                        .HasForeignKey("Player_Session_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Player_Game_Session");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Player_Game_Session", b =>
                {
                    b.HasOne("MoneyQuiz.Data.Data.Models.Player", "Player")
                        .WithMany("Player_Game_Sessions")
                        .HasForeignKey("Player_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyQuiz.Data.Data.Models.Game_Session", "GameSession")
                        .WithMany("Player_Game_Sessions")
                        .HasForeignKey("Session_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Answer", b =>
                {
                    b.Navigation("Player_Answers");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Game_Session", b =>
                {
                    b.Navigation("Player_Game_Sessions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Player", b =>
                {
                    b.Navigation("Player_Game_Sessions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Player_Game_Session", b =>
                {
                    b.Navigation("Lifelines");

                    b.Navigation("Player_Answers");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Data.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Lifelines");
                });
#pragma warning restore 612, 618
        }
    }
}
